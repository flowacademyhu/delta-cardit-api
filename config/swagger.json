{
    "swagger": "2.0",
    "host": "localhost:8000",
    "schemes": [
        "http"
    ],
    "info": {
        "title": "FLOW CARDIT API",
        "version": "1.0"
    },
    "paths": {
        "/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns a list of all users",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Failed to show users"
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/userData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New user created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed to create user"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user by id",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "User with given id does not exist"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/userData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed to update user"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "User with given id does not exist."
                    }
                }
            }
        },
        "/users/{userId}/results": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns a list of results by userId."
                    }
                }
            }
        },
        "/cards": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns a list of cards"
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/cardData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New card created",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Failed to create card"
                    }
                }
            }
        },
        "/cards/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns card by id",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Card with given id does not exist"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/cardData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card updated",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Failed to update card"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card deleted",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Card with given id does not exist."
                    }
                }
            }
        },
        "/cards/{cardId}/results": {
            "get": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns a list of groups"
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/groupData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New group created"
                    },
                    "400": {
                        "description": "Failed to create group"
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns group by id",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Group with given id does not exist"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/groupData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group updated",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Failed to update group"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group deleted",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Group with given id does not exist."
                    }
                }
            }
        },
        "/groups/{groupId}/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/decks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returns a list of decks"
                    }
                }
            },
            "post": {
                "parameters": [
                    {
                        "$ref": "#/parameters/deckData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New deck created"
                    },
                    "400": {
                        "description": "Failed to create deck"
                    }
                }
            }
        },
        "/decks/{id}": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns deck by id",
                        "schema": {
                            "$ref": "#/definitions/Deck"
                        }
                    },
                    "400": {
                        "description": "Deck with given id does not exist"
                    }
                }
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/deckData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deck updated",
                        "schema": {
                            "$ref": "#/definitions/Deck"
                        }
                    },
                    "400": {
                        "description": "Failed to update deck"
                    }
                }
            },
            "delete": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deck deleted",
                        "schema": {
                            "$ref": "#/definitions/Deck"
                        }
                    },
                    "400": {
                        "description": "Deck with given id does not exist."
                    }
                }
            }
        },
        "/decks/{deckId}/cards": {
            "get": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/decks/{deckId}/groups": {
            "get": {
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "properties": {
                "firstName": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "isAlpha": true,
                        "notEmpty": true
                    }
                },
                "lastName": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "isAlpha": true,
                        "notEmpty": true
                    }
                },
                "email": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "defaultValue": null,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "isEmail": true,
                        "notEmpty": true
                    }
                },
                "passwordHash": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "defaultValue": null,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "notEmpty": true
                    }
                },
                "role": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "defaultValue": null,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "notEmpty": true
                    }
                },
                "lastLogin": {
                    "type": "date",
                    "isDate": true,
                    "defaultValue": "new Date()"
                },
                "GroupId": {
                    "type": "integer"
                }
            }
        },
        "Users": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/User"
            }
        },
        "Card": {
            "properties": {
                "question": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "answer": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "difficulty": {
                    "type": "integer",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "min": 1,
                        "max": 3
                    }
                },
                "type": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                }
            }
        },
        "Cards": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Card"
            }
        },
        "Deck": {
            "properties": {
                "subject": {
                    "type": "string",
                    "allowNull": false,
                    "defaultValue": null,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "notEmpty": true
                    }
                }
            }
        },
        "Decks": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Deck"
            }
        },
        "Group": {
            "properties": {
                "name": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                }
            }
        },
        "Groups": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Group"
            }
        },
        "Result": {
            "properties": {
                "UserId": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true
                },
                "CardId": {
                    "type": "integer",
                    "allowNull": false,
                    "notEmpty": true
                },
                "isCorrect": {
                    "type": "boolean",
                    "allowNull": false,
                    "notEmpty": true
                }
            }
        },
        "Results": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Result"
            }
        }
    },
    "parameters": {
        "id": {
            "name": "id",
            "in": "path",
            "required": "true",
            "type": "integer"
        },
        "userData": {
            "name": "user",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/User"
            }
        },
        "cardData": {
            "name": "card",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/Card"
            }
        },
        "groupData": {
            "name": "group",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/Group"
            }
        },
        "deckData": {
            "name": "deck",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/Deck"
            }
        }
    }
}