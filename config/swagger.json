{
    "swagger": "2.0",
    "host": "localhost:8000",
    "schemes": [
        "http"
    ],
    "info": {
        "title": "FLOW CARDIT API",
        "version": "1.0"
    },
    "paths": {
        "/users": {
            "get": {
                "description": "Index of users",
                "responses": {
                    "200": {
                        "description": "Returns a list of all users",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    },
                    "400": {
                        "description": "Failed to show users"
                    }
                }
            },
            "post": {
                "description": "Creates new user",
                "parameters": [
                    {
                        "$ref": "#/parameters/userData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New user created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed to create user"
                    },
                    "500": {
                        "description": "Failed to hash password"
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Logs in user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": "true",
                        "type": "object",
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logs in user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "401": {
                        "description": "Auth failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/login/password": {
            "put": {
                "parameters": [
                    {
                        "name": "email",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "email": {
                                    "type": "string",
                                    "required": "true"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Show user by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns user by id",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "User with given id does not exist"
                    }
                }
            },
            "put": {
                "description": "Update user by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/userData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Failed to update user"
                    },
                    "500": {
                        "description": "Failed to hash password"
                    }
                }
            },
            "delete": {
                "description": "Delete user by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "User with given id does not exist."
                    }
                }
            }
        },
        "/users/{id}/me": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ]
            },
            "put": {
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "properties": {
                                "password": {
                                    "type": "string",
                                    "required": "true"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/cards": {
            "get": {
                "description": "Index of cards",
                "responses": {
                    "200": {
                        "description": "Returns a list of cards"
                    }
                }
            },
            "post": {
                "description": "Creates new card",
                "parameters": [
                    {
                        "$ref": "#/parameters/cardData"
                    },
                    {
                        "name": "deckId",
                        "in": "body",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New card created",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "500": {
                        "description": "Failed to create card"
                    }
                }
            }
        },
        "/cards/{id}": {
            "get": {
                "description": "Show card by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns card by id",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Card with given id does not exist"
                    }
                }
            },
            "put": {
                "description": "Update card by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/cardData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card updated",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Failed to update card"
                    }
                }
            },
            "delete": {
                "description": "Delete card by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card deleted",
                        "schema": {
                            "$ref": "#/definitions/Card"
                        }
                    },
                    "400": {
                        "description": "Card with given id does not exist."
                    }
                }
            }
        },
        "/cards/{cardId}/decks": {
            "get": {
                "description": "Show decks by cardId",
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show decks by cardId"
                    }
                }
            },
            "post": {
                "description": "Create cardDeck",
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "properties": {
                                "deckId": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/cards/{cardId}/decks/{deckId}": {
            "put": {
                "description": "Update cardDeck",
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "$ref": "#/definitions/CardDeckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful"
                    },
                    "400": {
                        "description": "CardDeck with given id does not exist"
                    }
                }
            },
            "delete": {
                "description": "Delete cardDeck",
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete successful"
                    },
                    "400": {
                        "description": "CardDeck with given id does not exist"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "description": "Index of groups",
                "responses": {
                    "200": {
                        "description": "Returns a list of groups"
                    }
                }
            },
            "post": {
                "description": "Creates new group",
                "parameters": [
                    {
                        "$ref": "#/parameters/groupData"
                    },
                    {
                        "name": "deckId",
                        "in": "body",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New group created"
                    },
                    "500": {
                        "description": "Failed to create group"
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "description": "Show group by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns group by id",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Group with given id does not exist"
                    }
                }
            },
            "put": {
                "description": "Update group by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/groupData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group updated",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Failed to update group"
                    }
                }
            },
            "delete": {
                "description": "Delete group by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group deleted",
                        "schema": {
                            "$ref": "#/definitions/Group"
                        }
                    },
                    "400": {
                        "description": "Group with given id does not exist."
                    }
                }
            }
        },
        "/groups/{groupId}/users": {
            "get": {
                "description": "Show users by groupId",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show users by groupId"
                    }
                }
            }
        },
        "/groups/{groupId}/decks": {
            "get": {
                "description": "Show decks by groupId",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show decks by groupId"
                    }
                }
            },
            "post": {
                "description": "Create groupDeck",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "properties": {
                                "deckId": {
                                    "type": "integer"                                    
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Creating successful"
                    }
                }
            }
        },
        "/groups/{groupId}/decks/{deckId}": {
            "put": {
                "description": "Update deck_group by groupId",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "body",
                        "required": "true",
                        "schema": {
                            "properties": {
                                "deckId": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful"
                    }
                }
            },
            "delete": {
                "description": "Delete deck by id",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    },
                    {
                        "name": "deckId",
                        "in": "path",
                        "required": "true",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete successful"
                    }
                }
            }
        },
        "/decks": {
            "get": {
                "description": "Index of decks",
                "responses": {
                    "200": {
                        "description": "Returns a list of decks"
                    },
                    "400": {
                        "description": "Failed to show decks"
                    }
                }
            },
            "post": {
                "description": "Creates new deck",
                "parameters": [
                    {
                        "$ref": "#/parameters/deckData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New deck created"
                    },
                    "500": {
                        "description": "Failed to create deck"
                    }
                }
            }
        },
        "/decks/{id}": {
            "get": {
                "description": "Show deck by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns deck by id",
                        "schema": {
                            "$ref": "#/definitions/Deck"
                        }
                    },
                    "400": {
                        "description": "Deck with given id does not exist"
                    }
                }
            },
            "put": {
                "description": "Update deck by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/deckData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deck updated",
                        "schema": {
                            "$ref": "#/definitions/Deck"
                        }
                    },
                    "400": {
                        "description": "Failed to update deck"
                    }
                }
            },
            "delete": {
                "description": "Delete deck by id",
                "parameters": [
                    {
                        "$ref": "#/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deck deleted",
                        "schema": {
                            "$ref": "#/definitions/Deck"
                        }
                    },
                    "400": {
                        "description": "Deck with given id does not exist."
                    }
                }
            }
        },
        "/decks/{deckId}/cards": {
            "get": {
                "description": "Show cards by deckId",
                "parameters": [
                    {
                        "$ref": "#/parameters/deckId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting cards successful"
                    }
                }
            }
        },
        "/decks/{deckId}/groups": {
            "get": {
                "description": "Show groups by deckId",
                "parameters": [
                    {
                        "$ref": "#/parameters/deckId"
                    }
                ]
            }
        }
    },
    "definitions": {
        "LoginRequest": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "Group_Deck": {
            "properties": {
                "GroupId": {
                    "type": "integer"
                },
                "DeckId": {
                    "type": "integer"
                }
            }
        },
        "CardDeckRequest": {
            "properties": {
                "deckId": {
                    "type": "integer"
                }
            }
        },
        "User": {
            "properties": {
                "firstName": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "lastName": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "email": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "defaultValue": null,
                    "unique": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ],
                        "isEmail": true
                    }
                },
                "passwordHash": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "defaultValue": null,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "contributor",
                        "student"
                    ],
                    "allowNull": false,
                    "notEmpty": true,
                    "defaultValue": null,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "lastLogin": {
                    "type": "string",
                    "isDate": true,
                    "defaultValue": "new Date()"
                },
                "GroupId": {
                    "type": "integer"
                }
            }
        },
        "Users": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/User"
            }
        },
        "Card": {
            "properties": {
                "question": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "answer": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                },
                "difficulty": {
                    "type": "integer",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "min": 1,
                        "max": 3
                    }
                },
                "type": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                }
            }
        },
        "Cards": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Card"
            }
        },
        "Deck": {
            "properties": {
                "subject": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "unique": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                }
            }
        },
        "Decks": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Deck"
            }
        },
        "Group": {
            "properties": {
                "name": {
                    "type": "string",
                    "allowNull": false,
                    "notEmpty": true,
                    "unique": true,
                    "validate": {
                        "len": [
                            3,
                            500
                        ]
                    }
                }
            }
        },
        "Groups": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Group"
            }
        },
        "Result": {
            "properties": {
                "UserId": {
                    "type": "integer",
                    "allowNull": false,
                    "notEmpty": true
                },
                "CardId": {
                    "type": "integer",
                    "allowNull": false,
                    "notEmpty": true
                },
                "isCorrect": {
                    "type": "boolean",
                    "allowNull": false,
                    "notEmpty": true
                }
            }
        },
        "Results": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Result"
            }
        }
    },
    "parameters": {
        "id": {
            "name": "id",
            "in": "path",
            "required": "true",
            "type": "integer"
        },
        "deckId": {
            "name": "deckId",
            "in": "path",
            "required": "true",
            "type": "integer"
        },
        "userData": {
            "name": "user",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/User"
            }
        },
        "cardData": {
            "name": "card",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/Card"
            }
        },
        "groupData": {
            "name": "group",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/Group"
            }
        },
        "deckData": {
            "name": "deck",
            "in": "body",
            "schema": {
                "$ref": "#/definitions/Deck"
            }
        }
    }
}